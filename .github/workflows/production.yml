name: Production Deployment

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: https://${{ github.repository_owner }}.github.io/joshuahynes.com/
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # Remove pnpm cache here since we'll handle it after pnpm is installed

      - name: Enable Corepack and install pnpm
        run: |
          corepack enable
          corepack prepare pnpm@8.14.0 --activate
          pnpm --version  # Verify pnpm is installed
          echo "$(which pnpm)"  # Debug: Show pnpm location

      - name: Get pnpm store path
        id: pnpm-cache
        run: |
          echo "store_path=$(pnpm store path)" >> $GITHUB_OUTPUT
          echo "PNPM_HOME=$(pnpm store path)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        id: cache
        with:
          path: ${{ steps.pnpm-cache.outputs.store_path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Check for pnpm-lock.yaml
        id: check_lockfile
        run: |
          if [ -f pnpm-lock.yaml ]; then
            echo "lockfile_exists=true" >> $GITHUB_OUTPUT
          else
            echo "lockfile_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Install Dependencies (with lockfile)
        if: steps.check_lockfile.outputs.lockfile_exists == 'true'
        run: pnpm install --frozen-lockfile
        
      - name: Install Dependencies (without lockfile)
        if: steps.check_lockfile.outputs.lockfile_exists != 'true'
        run: |
          pnpm install
          # Generate lockfile for future runs
          pnpm install --no-frozen-lockfile

      - name: Set Vite Base Path to Root
        run: |
          sed -i.bak "s|base: .*|base: '/',|" vite.config.ts

      - name: Build
        run: pnpm build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          keep_files: true
