//  --  ROWS
//  --------------------------------------------------------------------------
//  --  Rows reset the flow direction and act as a wrapping container for elements
.fl-rw {
    //  HACK -- TEMPORARY
    //  Because Careers' grid.less applies .clearfix() to the .-row class, we need to
    //  remove the before and after elements because flexbox picks them up. This can
    //  be removed when we update the grid.less to flexbox.
    &:before,
    &:after { position: absolute; }

    .flexbox();
    .flex(1 auto);
    .flex-flow();

    //  Flow adjustments
    &._start            { .flex-justify(flex-start); }
    &._end              { .flex-justify(flex-end); }
    &._justify          { .flex-justify(space-between); }
    &._reverse          { .flex-flow(row-reverse nowrap); }
    &._wrap             { .flex-flow(row wrap); }
    &._align-center     { align-items: center; }
}

[class*="col"] { .flex(0 0 auto); }

//  --  Column Sizes
.col {
    .flex(1 1 0);
    max-width: 100%;

    &1 {
        flex-basis: @grid-col-width * 1;
        max-width: @grid-col-width * 1;
    }
    &2 {
        flex-basis: @grid-col-width * 2;
        max-width: @grid-col-width * 2;
    }
    &3 {
        flex-basis: @grid-col-width * 3;
        max-width: @grid-col-width * 3;
    }
    &4 {
        flex-basis: @grid-col-width * 4;
        max-width: @grid-col-width * 4;
    }
    &5 {
        flex-basis: @grid-col-width * 5;
        max-width: @grid-col-width * 5;
    }
    &6 {
        flex-basis: @grid-col-width * 6;
        max-width: @grid-col-width * 6;
    }
    &7 {
        flex-basis: @grid-col-width * 7;
        max-width: @grid-col-width * 7;
    }
    &8 {
        flex-basis: @grid-col-width * 8;
        max-width: @grid-col-width * 8;
    }
    &9 {
        flex-basis: @grid-col-width * 9;
        max-width: @grid-col-width * 9;
    }
    &10 {
        flex-basis: @grid-col-width * 10;
        max-width: @grid-col-width * 10;
    }
    &11 {
        flex-basis: @grid-col-width * 11;
        max-width: @grid-col-width * 11;
    }
    &12 {
        flex-basis: @grid-col-width * 12;
        max-width: @grid-col-width * 12;
    }

    //  When you need to push a column over
    &-push1  { margin-left: @grid-col-width * 1; }
    &-push2  { margin-left: @grid-col-width * 2; }
    &-push3  { margin-left: @grid-col-width * 3; }
    &-push4  { margin-left: @grid-col-width * 4; }
    &-push5  { margin-left: @grid-col-width * 5; }
    &-push6  { margin-left: @grid-col-width * 6; }
    &-push7  { margin-left: @grid-col-width * 7; }
    &-push8  { margin-left: @grid-col-width * 8; }
    &-push9  { margin-left: @grid-col-width * 9; }
    &-push10 { margin-left: @grid-col-width * 10; }
    &-push11 { margin-left: @grid-col-width * 11; }
    &-push12 { margin-left: @grid-col-width * 12; }

    //  When you need to pull a column over
    &-pull1  { margin-left: -(@grid-col-width * 1); }
    &-pull2  { margin-left: -(@grid-col-width * 2); }
    &-pull3  { margin-left: -(@grid-col-width * 3); }
    &-pull4  { margin-left: -(@grid-col-width * 4); }
    &-pull5  { margin-left: -(@grid-col-width * 5); }
    &-pull6  { margin-left: -(@grid-col-width * 6); }
    &-pull7  { margin-left: -(@grid-col-width * 7); }
    &-pull8  { margin-left: -(@grid-col-width * 8); }
    &-pull9  { margin-left: -(@grid-col-width * 9); }
    &-pull10 { margin-left: -(@grid-col-width * 10); }
    &-pull11 { margin-left: -(@grid-col-width * 11); }
    &-pull12 { margin-left: -(@grid-col-width * 12); }
}