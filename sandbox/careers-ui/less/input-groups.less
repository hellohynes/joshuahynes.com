//
//  STACK OVERFLOW
//  FORMS
//
//  TABLE OF CONTENTS
//  • VARIABLES
//  • BASE STYLES
//  • SPECIFIC STYLES
//
//  ============================================================================
//  $   VARIABLES
//      All input variables are kept in the base inputs.less file.
//  ============================================================================
@grid-col-width: 100% / 12;

//  ============================================================================
//  $   INPUT GROUP
//      Wrapping <div> that provides ammple white space around a unit of
//      form elements
//  ----------------------------------------------------------------------------
.input-group {
    position: relative;
    margin-bottom: 1.4em;

    //  Input prepends, appends, and connectors use the same grayed out box
    //  style. This is the univesal style for it.
    .-fill {
        padding: @input-padding;
        font-size: @input-fontSize;
        line-height: @input-lineHeight;
        background-color: @black-050;
        border: 1px solid @input-border;
        flex-shrink: 0;

        code {
            padding: 0;
            font-size: 100%:;
            color: @black-500;
            background-color: transparent;
        }
    }

    //  If an input-group is nested within another, remove the bottom margin.
    & > & { margin-bottom: 0; }

    //  By default labels have a display of inline-block. However, if sibling
    //  elements have a grid column width assigned to them, the label is moved to
    //  the end of the order since it doesn't have a float property assigned to
    //  it. Now assigning a float property doesn't help us, so instead we change
    //  the display to block for direct child label elements within input-groups.
    > label {
        display: block;
        width: 100%;
    }

    > .-row {
        .flexbox();
        .flex(0 1 auto);
        flex-direction: row;
        flex-wrap: wrap;

        margin-top: @margin-half;
        width: 100%;

        > select {
            display: inline-block;
            vertical-align: middle;
            margin-left: @margin-half;
            margin-right: @margin-half;

            &:first-of-type { margin-left: 0; }
            &:last-of-type { margin-right: 0; }
        }
    }

    //  If an entire input-group is unavailable, make it look like that.
    &._disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }
}


//  --  INPUT GROUP: Grid Systems
.input-group,
.button-group {
    *,
    *:before,
    *:after { box-sizing: border-box; }

    .clearfix();

    .flexbox();
    .flex(0 1 auto);
    flex-direction: row;
    flex-wrap: wrap;

    > [class*="-col"] { .flex(0 0 auto); }

    //  --  Column Sizes
    > .col-1 {
        flex-basis: @grid-col-width * 1;
        max-width: @grid-col-width * 1;
    }
    > .col-2 {
        flex-basis: @grid-col-width * 2;
        max-width: @grid-col-width * 2;
    }
    > .col-3 {
        flex-basis: @grid-col-width * 3;
        max-width: @grid-col-width * 3;
    }
    > .col-4 {
        flex-basis: @grid-col-width * 4;
        max-width: @grid-col-width * 4;
    }
    > .col-5 {
        flex-basis: @grid-col-width * 5;
        max-width: @grid-col-width * 5;
    }
    > .col-6 {
        flex-basis: @grid-col-width * 6;
        max-width: @grid-col-width * 6;
    }
    > .col-7 {
        flex-basis: @grid-col-width * 7;
        max-width: @grid-col-width * 7;
    }
    > .col-8 {
        flex-basis: @grid-col-width * 8;
        max-width: @grid-col-width * 8;
    }
    > .col-9 {
        flex-basis: @grid-col-width * 9;
        max-width: @grid-col-width * 9;
    }
    > .col-10 {
        flex-basis: @grid-col-width * 10;
        max-width: @grid-col-width * 10;
    }
    > .col-11 {
        flex-basis: @grid-col-width * 11;
        max-width: @grid-col-width * 11;
    }
    > .col-12 {
        flex-basis: @grid-col-width * 12;
        max-width: @grid-col-width * 12;
    }
}

//  --  INPUT GROUP: Input Prepend & Append
.input-group {
    > .-prepend,
    > .-append {
        .flexbox();
        margin-top: @margin-half;

        .-fill,
        > input { display: inline-block; }

        .input-group & { margin-top: 0; }

        //  If a checkbox or radio input follows a prepend
        //  or an append div, insert some space.
        + .checkbox,
        + .radio { margin-top: 0.25em; }
    }

    > .-prepend {
        .-fill { border-right-width: 0; }

        + input[type="button"],
        + input[type="submit"],
        + button,
        + .btn,
        + [class*="btn-"] {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }
    }

    > .-append {
        .-fill {
            .flex-order(2);
            border-left-width: 0;

            &.checkbox,
            &.radio { padding-left: 30px; }
        }

        + input[type="button"],
        + input[type="submit"],
        + button,
        + .btn,
        + [class*="btn-"] {
            left: -1px;
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }
    }
}

//  --  INPUT GROUPS: Multi Input Rows
.input-group > .-multi {
    .flexbox();
    .flex-justify(flex-start);

    label + & { margin-top: @margin-half; }

    input { flex-grow: 2; }

    .-fill {
        flex-grow: 1;
        border-left-width: 0;
        border-right-width: 0;
    }

    input[disabled] {
        color: @input_disabled-color;
        border-color: @input-border;
        background-color: @input_disabled-background;
        cursor: not-allowed;
        pointer-events: none;
    }
}

//  --  INPUT GROUPS: Inline Form Rows
.input-group._inline {
    .flexbox();

    .input-group & { margin-top: @margin-half; }

    > .input-group,
    > .button-group { margin-top: 0; }

    > .button-group {
        .flexbox();

        input[type="button"],
        input[type="submit"],
        button,
        .btn,
        [class*="btn-"] { align-self: flex-end; }
    }

    input[type="button"],
    input[type="submit"],
    button,
    .btn,
    [class*="btn-"],
    > label,
    .-control {
        align-self: center;
        margin: 0;
    }

    > select,
    > textarea,
    > input[type="text"],
    > input[type="password"],
    > input[type="number"],
    > input[type="email"],
    > input[type="url"],
    > input[type="search"],
    > input[type="tel"],
    > input[type="datetime"],
    > .input {
        margin-top: 0;
        flex-grow: 2;

        ~ input[type="button"],
        ~ input[type="submit"],
        ~ button,
        ~ .btn,
        ~ [class*="btn-"] {
            left: -1px;
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }
    }

    > label { flex-shrink: 0; } //  Makes labels act like white-space: nowrap

    &.-locationAddress {
        .-append,
        .-prepend { min-width: 90.5%; }
    }

    .-control {
        width: auto;
        > input { margin-left: @margin-base; }
    }

    > .-row {
        .flexbox();
        flex-wrap: wrap;
    }

    input[type="button"],
    input[type="submit"],
    button,
    .btn,
    [class*="btn-"] {
        font-size: @input-fontSize;

        //  Have to restate these. Temporary. Need to figure out a better way.
        &._xlarge   { font-size: ceil(@fontSize-base * 1.84px); }
        &._large    { font-size: ceil(@fontSize-base * 1.38px); }
        &._medium   { font-size: ceil(@fontSize-base * 1.15px); }
        &._small    { font-size: ceil(@fontSize-base * 0.92px); }
    }

    //  --  PADDING
    //      If padding between elements is desired
    &._padding {
        > div {
            padding-left: 0.75em;
            &:first-of-type { padding-left: 0; }
        }
    }
}


//  --  BUTTON GROUPS
//      Wrapping <div> for buttons / actions
.button-group {
    margin-top: @margin-base;

    //  Applies top border to the button container
    &._border {
        padding-top: 1.4em;
        border-top: 1px solid @borderColor-gray;
    }
}